{"version":3,"sources":["../src/Noise.ts","../src/main.tsx"],"names":["Noise","Noise.Grad","Noise.Grad.constructor","Noise.Grad.dot2","Noise.Grad.dot3","Noise.fade","Noise.lerp","Noise.Noise","Noise.Noise.constructor","Noise.Noise.seed","Noise.Noise.simplex2","Noise.Noise.simplex3","Noise.Noise.perlin2","Noise.Noise.perlin3","randomGaussian","Pos","Pos.distance2","Pos.minus","Pos.angle","Pos.toString","Pos.clone","UnionFind","UnionFind.constructor","UnionFind.add","UnionFind.find","UnionFind.link","UnionFind.toMap","CityElement","CityElement.constructor","CityElement.render","CityElement.toString","CityElement.temp","PolyElement","PolyElement.constructor","PolyElement.renderObj","CircleElement","CircleElement.constructor","CircleElement.renderObj","Rectangle","Rectangle.constructor","House","House.constructor","Tree","Tree.constructor","River","River.constructor","Road","Road.constructor","PixelMap","PixelMap.constructor","PixelMap.add","PixelMap.get","makeTerrain","scaleImageData","weightedRandom","contrastSpreiz","City","City.constructor","City.add","City.createPath","City.unionizeHouses","City.rateForSettling","City.settleRateMap","City.settleRateImage","createArray","randomNumber","randomChoice","moveInDir","getMaxIndex","housePlacementIterate","placeHouseNearRiver","randomCity","delayed","animationFrame","normalizeAngle","drawImage","walkPath","CityRenderer","CityRenderer.constructor","CityRenderer.constructor.redrawCity","CityRenderer.constructor.unionizeHouses","CityRenderer.constructor.increasePopulation","CityRenderer.constructor.debugHitmap","CityRenderer.constructor.debugSettlemap","CityRenderer.render","CityRenderer.clear","CityRenderer.drawTerrain","CityRenderer.drawCity","CityRenderer.getCtx","CityRenderer.getOverlayCtx"],"mappings":"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,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EACjGA,GAAGA,EAAEA,CAACA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAC/FA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAC9FA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAC/FA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAC5FA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAC7FA,CAACA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAChGA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,EAC3FA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAC5FA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EA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AACA,CAACA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;AACtDA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;AAC9DA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA;AAC9DA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;AACtEA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;AAC9DA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;AACtEA,oBAAIA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,CAACA,C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","file":"tmp.js","sourcesContent":[null,"\"use strict\";\n/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\nvar Noise;\n(function (Noise_1) {\n    class Grad {\n        constructor(x, y, z) {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.x = x;\n            this.y = y;\n            this.z = z;\n        }\n        dot2(x, y) {\n            return this.x * x + this.y * y;\n        }\n        dot3(x, y, z) {\n            return this.x * x + this.y * y + this.z * z;\n        }\n    }\n    const grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0),\n        new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1),\n        new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\n    // ##### Perlin noise stuff\n    function fade(t) {\n        return t * t * t * (t * (t * 6 - 15) + 10);\n    }\n    function lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n    // Skewing and unskewing factors for 2, 3, and 4 dimensions\n    const F2 = 0.5 * (Math.sqrt(3) - 1);\n    const G2 = (3 - Math.sqrt(3)) / 6;\n    const F3 = 1 / 3;\n    const G3 = 1 / 6;\n    const p = [151, 160, 137, 91, 90, 15,\n        131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n        190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n        88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n        77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n        102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n        135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n        5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n        223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n        129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n        251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n        49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n        138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n    // To remove the need for index wrapping, double the permutation table length\n    const perm = new Array(512);\n    const gradP = new Array(512);\n    class Noise {\n        constructor() {\n            this.seed(Math.random());\n        }\n        // This isn't a very good seeding function, but it works ok. It supports 2^16\n        // different seed values. Write something better if you need more seeds.\n        seed(seed) {\n            if (seed > 0 && seed < 1) {\n                // Scale the seed out\n                seed *= 65536;\n            }\n            seed = Math.floor(seed);\n            if (seed < 256) {\n                seed |= seed << 8;\n            }\n            for (var i = 0; i < 256; i++) {\n                var v;\n                if (i & 1) {\n                    v = p[i] ^ (seed & 255);\n                }\n                else {\n                    v = p[i] ^ ((seed >> 8) & 255);\n                }\n                perm[i] = perm[i + 256] = v;\n                gradP[i] = gradP[i + 256] = grad3[v % 12];\n            }\n        }\n        ;\n        /*\n        for(var i=0; i<256; i++) {\n            perm[i] = perm[i + 256] = p[i];\n            gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n        }*/\n        // 2D simplex noise\n        simplex2(xin, yin) {\n            var n0, n1, n2; // Noise contributions from the three corners\n            // Skew the input space to determine which simplex cell we're in\n            var s = (xin + yin) * F2; // Hairy factor for 2D\n            var i = Math.floor(xin + s);\n            var j = Math.floor(yin + s);\n            var t = (i + j) * G2;\n            var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n            var y0 = yin - j + t;\n            // For the 2D case, the simplex shape is an equilateral triangle.\n            // Determine which simplex we are in.\n            var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n            if (x0 > y0) {\n                i1 = 1;\n                j1 = 0;\n            }\n            else {\n                i1 = 0;\n                j1 = 1;\n            }\n            // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n            // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n            // c = (3-sqrt(3))/6\n            var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n            var y1 = y0 - j1 + G2;\n            var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n            var y2 = y0 - 1 + 2 * G2;\n            // Work out the hashed gradient indices of the three simplex corners\n            i &= 255;\n            j &= 255;\n            var gi0 = gradP[i + perm[j]];\n            var gi1 = gradP[i + i1 + perm[j + j1]];\n            var gi2 = gradP[i + 1 + perm[j + 1]];\n            // Calculate the contribution from the three corners\n            var t0 = 0.5 - x0 * x0 - y0 * y0;\n            if (t0 < 0) {\n                n0 = 0;\n            }\n            else {\n                t0 *= t0;\n                n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n            }\n            var t1 = 0.5 - x1 * x1 - y1 * y1;\n            if (t1 < 0) {\n                n1 = 0;\n            }\n            else {\n                t1 *= t1;\n                n1 = t1 * t1 * gi1.dot2(x1, y1);\n            }\n            var t2 = 0.5 - x2 * x2 - y2 * y2;\n            if (t2 < 0) {\n                n2 = 0;\n            }\n            else {\n                t2 *= t2;\n                n2 = t2 * t2 * gi2.dot2(x2, y2);\n            }\n            // Add contributions from each corner to get the final noise value.\n            // The result is scaled to return values in the interval [-1,1].\n            return 70 * (n0 + n1 + n2);\n        }\n        ;\n        // 3D simplex noise\n        simplex3(xin, yin, zin) {\n            var n0, n1, n2, n3; // Noise contributions from the four corners\n            // Skew the input space to determine which simplex cell we're in\n            var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n            var i = Math.floor(xin + s);\n            var j = Math.floor(yin + s);\n            var k = Math.floor(zin + s);\n            var t = (i + j + k) * G3;\n            var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n            var y0 = yin - j + t;\n            var z0 = zin - k + t;\n            // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n            // Determine which simplex we are in.\n            var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n            var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n            if (x0 >= y0) {\n                if (y0 >= z0) {\n                    i1 = 1;\n                    j1 = 0;\n                    k1 = 0;\n                    i2 = 1;\n                    j2 = 1;\n                    k2 = 0;\n                }\n                else if (x0 >= z0) {\n                    i1 = 1;\n                    j1 = 0;\n                    k1 = 0;\n                    i2 = 1;\n                    j2 = 0;\n                    k2 = 1;\n                }\n                else {\n                    i1 = 0;\n                    j1 = 0;\n                    k1 = 1;\n                    i2 = 1;\n                    j2 = 0;\n                    k2 = 1;\n                }\n            }\n            else {\n                if (y0 < z0) {\n                    i1 = 0;\n                    j1 = 0;\n                    k1 = 1;\n                    i2 = 0;\n                    j2 = 1;\n                    k2 = 1;\n                }\n                else if (x0 < z0) {\n                    i1 = 0;\n                    j1 = 1;\n                    k1 = 0;\n                    i2 = 0;\n                    j2 = 1;\n                    k2 = 1;\n                }\n                else {\n                    i1 = 0;\n                    j1 = 1;\n                    k1 = 0;\n                    i2 = 1;\n                    j2 = 1;\n                    k2 = 0;\n                }\n            }\n            // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n            // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n            // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n            // c = 1/6.\n            var x1 = x0 - i1 + G3; // Offsets for second corner\n            var y1 = y0 - j1 + G3;\n            var z1 = z0 - k1 + G3;\n            var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n            var y2 = y0 - j2 + 2 * G3;\n            var z2 = z0 - k2 + 2 * G3;\n            var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n            var y3 = y0 - 1 + 3 * G3;\n            var z3 = z0 - 1 + 3 * G3;\n            // Work out the hashed gradient indices of the four simplex corners\n            i &= 255;\n            j &= 255;\n            k &= 255;\n            var gi0 = gradP[i + perm[j + perm[k]]];\n            var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n            var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n            var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]];\n            // Calculate the contribution from the four corners\n            var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n            if (t0 < 0) {\n                n0 = 0;\n            }\n            else {\n                t0 *= t0;\n                n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n            }\n            var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n            if (t1 < 0) {\n                n1 = 0;\n            }\n            else {\n                t1 *= t1;\n                n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n            }\n            var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n            if (t2 < 0) {\n                n2 = 0;\n            }\n            else {\n                t2 *= t2;\n                n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n            }\n            var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n            if (t3 < 0) {\n                n3 = 0;\n            }\n            else {\n                t3 *= t3;\n                n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n            }\n            // Add contributions from each corner to get the final noise value.\n            // The result is scaled to return values in the interval [-1,1].\n            return 32 * (n0 + n1 + n2 + n3);\n        }\n        ;\n        // 2D Perlin Noise\n        perlin2(x, y) {\n            // Find unit grid cell containing point\n            var X = Math.floor(x), Y = Math.floor(y);\n            // Get relative xy coordinates of point within that cell\n            x = x - X;\n            y = y - Y;\n            // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n            X = X & 255;\n            Y = Y & 255;\n            // Calculate noise contributions from each of the four corners\n            var n00 = gradP[X + perm[Y]].dot2(x, y);\n            var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n            var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n            var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\n            // Compute the fade curve value for x\n            var u = fade(x);\n            // Interpolate the four results\n            return lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n        }\n        ;\n        // 3D Perlin Noise\n        perlin3(x, y, z) {\n            // Find unit grid cell containing point\n            var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n            // Get relative xyz coordinates of point within that cell\n            x = x - X;\n            y = y - Y;\n            z = z - Z;\n            // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n            X = X & 255;\n            Y = Y & 255;\n            Z = Z & 255;\n            // Calculate noise contributions from each of the eight corners\n            var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n            var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n            var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n            var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n            var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n            var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n            var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n            var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\n            // Compute the fade curve value for x, y, z\n            var u = fade(x);\n            var v = fade(y);\n            var w = fade(z);\n            // Interpolate\n            return lerp(lerp(lerp(n000, n100, u), lerp(n001, n101, u), w), lerp(lerp(n010, n110, u), lerp(n011, n111, u), w), v);\n        }\n        ;\n    }\n    Noise_1.Noise = Noise;\n})(Noise || (Noise = {}));\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nconst π = Math.PI;\nconst DEG = π / 180;\nconst config = {\n    w: 1024,\n    h: 768,\n    colors: {\n        river: [\"#66f\", \"#66f\"],\n        road: [\"#444\", undefined],\n        tree: [\"#4a4\", \"#4a4\"]\n    },\n    initialHouseCount: 10,\n    addHouseCount: 10,\n    treeCount: 1000,\n    riverCount: 1,\n    riverIter: 1000,\n    minHouseDist: 10,\n    walk: {\n        stepDist: 4, minLookDist: 10, maxLookDist: 150, lookFOV: 60 * DEG, lookIter: 200,\n        bucketCount: 7,\n        iterPerFrame: 20,\n        rating: {\n            House: 5,\n            Road: 5,\n            Tree: -1,\n            River: -1,\n            start: -3,\n        }\n    },\n    settle: {\n        sample: 100,\n        randomNearPoint: () => ({ x: randomGaussian(config.w / 10), y: randomGaussian(config.w / 10) }),\n        settleMapResolution: 10,\n        rating: {\n            House: 10,\n            Road: 20,\n            River: 5,\n            Tree: -1,\n        }\n    }\n};\nlet _nextGaussian;\nfunction randomGaussian(standardDeviation = 1, mean = 0) {\n    if (_nextGaussian !== undefined) {\n        var nextGaussian = _nextGaussian;\n        _nextGaussian = undefined;\n        return (nextGaussian * standardDeviation) + mean;\n    }\n    else {\n        let v1, v2, s, multiplier;\n        do {\n            v1 = 2 * Math.random() - 1; // between -1 and 1\n            v2 = 2 * Math.random() - 1; // between -1 and 1\n            s = v1 * v1 + v2 * v2;\n        } while (s >= 1 || s == 0);\n        multiplier = Math.sqrt(-2 * Math.log(s) / s);\n        _nextGaussian = v2 * multiplier;\n        return (v1 * multiplier * standardDeviation) + mean;\n    }\n}\n;\nvar qd = {};\nlocation.search.substr(1).split(\"&\").forEach(item => {\n    let [k, v] = item.split(\"=\");\n    qd[k] = v && decodeURIComponent(v);\n});\nfor (let c of Object.keys(qd)) {\n    const list = c.split(\".\");\n    const attr = list.pop();\n    const targ = list.reduce((a, b, i, arr) => a[b], config);\n    targ[attr] = typeof targ[attr] === \"number\" ? +qd[c] : qd[c];\n}\nvar Pos;\n(function (Pos) {\n    function distance2(p1, p2) {\n        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n    }\n    Pos.distance2 = distance2;\n    function minus(p1, p2) {\n        return { x: p1.x - p2.x, y: p1.y - p2.y };\n    }\n    Pos.minus = minus;\n    function angle(p1, p2) {\n        const d = minus(p2, p1);\n        return Math.atan2(d.y, d.x);\n    }\n    Pos.angle = angle;\n    function toString({ x, y }) {\n        return `(${x.toFixed(2)}, ${y.toFixed(2)})`;\n    }\n    Pos.toString = toString;\n    function clone({ x, y }) {\n        return { x, y };\n    }\n    Pos.clone = clone;\n})(Pos || (Pos = {}));\nclass UnionFind {\n    constructor() {\n        this.roots = new Map();\n        this.ranks = new Map();\n    }\n    add(t) {\n        this.roots.set(t, t);\n        this.ranks.set(t, 0);\n    }\n    find(x) {\n        let x0 = x;\n        const roots = this.roots;\n        if (!roots.has(x))\n            throw Error(`${x} not in UnionFind`);\n        while (roots.get(x) !== x)\n            x = roots.get(x);\n        while (roots.get(x0) !== x) {\n            const y = roots.get(x0);\n            roots.set(x0, x);\n            x0 = y;\n        }\n        return x;\n    }\n    link(x, y) {\n        let xr = this.find(x), yr = this.find(y);\n        if (xr === yr)\n            return;\n        const ranks = this.ranks, roots = this.roots, xd = ranks.get(xr), yd = ranks.get(yr);\n        if (xd < yd) {\n            roots.set(xr, yr);\n        }\n        else if (yd < xd) {\n            roots.set(yr, xr);\n        }\n        else {\n            roots.set(yr, xr);\n            ranks.set(xr, ranks.get(xr) + 1);\n        }\n    }\n    toMap() {\n        const map = new Map();\n        for (const t of this.roots.keys()) {\n            const r = this.find(t);\n            if (map.has(r))\n                map.get(r).push(t);\n            else\n                map.set(r, [t]);\n        }\n        return map;\n    }\n}\nclass CityElement {\n    constructor(pos, rot = 0) {\n        this.pos = pos;\n        this.rot = rot;\n        this.id = CityElement.uniqueCounter++;\n        this.type = this.constructor.name;\n    }\n    /** indicates the next created element does not need a unique number */\n    static temp() {\n        CityElement.uniqueCounter--;\n    }\n    render(ctx, forPixelMap = false) {\n        ctx.save();\n        ctx.translate(this.pos.x, this.pos.y);\n        ctx.rotate(this.rot);\n        this.renderObj(ctx, forPixelMap);\n        ctx.restore();\n    }\n    toString() {\n        return `${this.constructor.name} at (${Pos.toString(this.pos)})`;\n    }\n}\nCityElement.uniqueCounter = 0;\nclass PolyElement extends CityElement {\n    constructor(pos = { x: 0, y: 0 }, rot = 0, arr, width, bumpWidth, strokeColor = \"#000\", fillColor, closePath = false) {\n        super(pos, rot);\n        this.arr = arr;\n        this.width = width;\n        this.bumpWidth = bumpWidth;\n        this.strokeColor = strokeColor;\n        this.fillColor = fillColor;\n        this.closePath = closePath;\n    }\n    renderObj(ctx, forPixelMap) {\n        if (this.arr.length === 0)\n            return;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(this.arr[0].x, this.arr[0].y);\n        for (const p of this.arr.slice(1)) {\n            ctx.lineTo(p.x, p.y);\n        }\n        if (this.closePath)\n            ctx.closePath();\n        if (!forPixelMap)\n            ctx.strokeStyle = this.strokeColor;\n        ctx.lineWidth = forPixelMap ? this.bumpWidth : this.width;\n        ctx.stroke();\n        if (this.fillColor) {\n            if (!forPixelMap)\n                ctx.fillStyle = this.fillColor;\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n}\nclass CircleElement extends CityElement {\n    constructor(pos, radius, bumpRadius, strokeColor = \"#000\", fillColor = strokeColor) {\n        super(pos, 0);\n        this.radius = radius;\n        this.bumpRadius = bumpRadius;\n        this.strokeColor = strokeColor;\n        this.fillColor = fillColor;\n    }\n    renderObj(ctx, forPixelMap) {\n        if (!forPixelMap)\n            ctx.strokeStyle = this.strokeColor;\n        if (!forPixelMap)\n            ctx.fillStyle = this.fillColor;\n        ctx.beginPath();\n        ctx.arc(0, 0, forPixelMap ? this.bumpRadius : this.radius, 0, 2 * π);\n        ctx.fill();\n        ctx.stroke();\n    }\n}\nclass Rectangle extends PolyElement {\n    constructor(pos, rot, width, height, strokeWidth, bumpWidth, strokeColor, fillColor) {\n        super(pos, rot, [{ x: -width / 2, y: -height / 2 }, { x: width / 2, y: -height / 2 }, { x: width / 2, y: height / 2 }, { x: -width / 2, y: height / 2 }], strokeWidth, bumpWidth, strokeColor, fillColor, true);\n    }\n}\nclass House extends Rectangle {\n    constructor(pos, rot = 0, size = 10) {\n        super(pos, rot, size, randomNumber(size, size * 2), 1, 10, \"#000\", \"#888\");\n    }\n}\nclass Tree extends CircleElement {\n    constructor(pos, radius) {\n        super(pos, radius, radius * 2, config.colors.tree[0], config.colors.tree[1]);\n    }\n}\nclass River extends CircleElement {\n    constructor(pos, radius) {\n        super(pos, radius, radius * 2, config.colors.river[0], config.colors.river[1]);\n    }\n}\nclass Road extends PolyElement {\n    constructor(path, houses) {\n        super({ x: 0, y: 0 }, 0, path, 3, 14, config.colors.road[0], config.colors.road[1]);\n        this.houses = houses;\n    }\n}\nclass PixelMap {\n    constructor(w, h) {\n        this.w = w;\n        this.h = h;\n        this.can = document.createElement(\"canvas\");\n        this.map = new Map();\n        this.can.width = w;\n        this.can.height = h;\n        this.ctx = this.can.getContext(\"2d\");\n        this.ctx.fillStyle = \"white\";\n        this.ctx.fillRect(0, 0, w, h);\n    }\n    add(e) {\n        const v = new DataView(new ArrayBuffer(4));\n        v.setUint32(0, e.id, true);\n        const color = `rgb(${v.getUint8(0)}, ${v.getUint8(1)}, ${v.getUint8(2)})`;\n        this.ctx.strokeStyle = this.ctx.fillStyle = color;\n        this.map.set(e.id, e);\n        e.render(this.ctx, true);\n    }\n    get({ x, y }) {\n        x = x | 0;\n        y = y | 0;\n        const d = this.ctx.getImageData(x, y, 1, 1).data;\n        d[3] = 0;\n        const v = new DataView(d.buffer, d.byteOffset, d.byteLength);\n        return this.map.get(v.getUint32(0, true));\n    }\n}\nfunction makeTerrain() {\n    // https://code.google.com/p/fractalterraingeneration/wiki/Fractional_Brownian_Motion\n    const noise = new Noise.Noise();\n    const lacunarity = 2;\n    const gain = 1 / lacunarity;\n    const octaves = 3;\n    return (x, y) => {\n        let frequency = 0.002;\n        let amplitude = gain;\n        let total = 0.0;\n        for (let i = 0; i < octaves; ++i) {\n            total += noise.perlin2(x * frequency, y * frequency) * amplitude;\n            frequency *= lacunarity;\n            amplitude *= gain;\n        }\n        return ((total + 1) / 2 * 200 + 127) | 0;\n    };\n}\nfunction scaleImageData(imageData, scale, target) {\n    var newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = imageData.width;\n    newCanvas.height = imageData.height;\n    newCanvas.getContext(\"2d\").putImageData(imageData, 0, 0);\n    target.save();\n    target.scale(scale, scale);\n    target.drawImage(newCanvas, 0, 0);\n    target.restore();\n}\nfunction weightedRandom(weights, total_weight, increment = 1) {\n    var random_num = randomNumber(0, total_weight);\n    var weight_sum = 0;\n    for (var i = 0; i < weights.length; i += increment) {\n        weight_sum += weights[i];\n        if (random_num <= weight_sum)\n            return i;\n    }\n}\n;\nfunction contrastSpreiz(arr) {\n    let min = Infinity, max = -Infinity;\n    for (let i = 0; i < arr.length; i++) {\n        const cur = arr[i];\n        if (cur < min)\n            min = cur;\n        if (cur > max)\n            max = cur;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (arr[i] - min) / (max - min);\n    }\n    return arr;\n}\nclass City {\n    constructor() {\n        this.houses = [];\n        this.houseUnion = new UnionFind();\n        this.terrain = makeTerrain();\n        this.roads = [];\n        this.pixelMap = new PixelMap(config.w, config.h);\n        this.oob = (pos) => pos.x < 0 || pos.y < 0 || pos.x > config.w || pos.y > config.h;\n        this.stuff = [];\n    }\n    add(thing) {\n        if (thing instanceof House) {\n            this.houses.push(thing);\n            this.houseUnion.add(thing);\n        }\n        else if (thing instanceof Road) {\n            const [house, targ] = thing.houses;\n            if (targ instanceof House)\n                this.houseUnion.link(house, targ);\n            else if (targ instanceof Road)\n                this.houseUnion.link(house, targ.houses[0]);\n            this.roads.push(thing);\n        }\n        else {\n            this.stuff.push(thing);\n        }\n        this.pixelMap.add(thing);\n    }\n    createPath(house1, house2) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const path = yield walkPath(this, cityRenderer.getOverlayCtx(), house1, house2);\n            const targPos = path[path.length - 1];\n            const targ = this.pixelMap.get(targPos);\n            path.unshift(house1.pos);\n            if (targ instanceof House)\n                path.push(targ.pos);\n            if (targ instanceof Road)\n                path.push(targ.arr.map(p => ({ p, d: Pos.distance2(p, targPos) })).reduce((min, cur) => cur.d < min.d ? cur : min, { p: null, d: Infinity }).p);\n            this.add(new Road(path, [house1, targ]));\n            cityRenderer.drawCity(this);\n        });\n    }\n    unionizeHouses() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let houseUnionMap = this.houseUnion.toMap();\n            while (houseUnionMap.size > 1) {\n                console.log(`currently ${houseUnionMap.size} groups`);\n                const roots = [...houseUnionMap.keys()];\n                const group1 = randomChoice(roots);\n                let group2;\n                do\n                    group2 = randomChoice(roots);\n                while (group2 === group1);\n                let house1 = randomChoice(houseUnionMap.get(group1)), house2 = randomChoice(houseUnionMap.get(group2));\n                yield this.createPath(house1, house2);\n                houseUnionMap = this.houseUnion.toMap();\n            }\n        });\n    }\n    /** return value, higher means better settle position*/\n    rateForSettling(p) {\n        const obj = this.pixelMap.get(p);\n        let rating = 0;\n        if (!obj) {\n            // get proximity sample\n            for (let i = 0; i < config.settle.sample; i++) {\n                const pos = Pos.minus(p, config.settle.randomNearPoint());\n                const ele = this.pixelMap.get(pos);\n                if (ele)\n                    rating += config.settle.rating[ele.type];\n            }\n        }\n        return rating;\n    }\n    settleRateMap() {\n        const w = (config.w / config.settle.settleMapResolution) | 0;\n        const h = (config.h / config.settle.settleMapResolution) | 0;\n        const vals = [];\n        for (let y = 0; y < h; y++)\n            for (let x = 0; x < w; x++) {\n                vals.push((this.rateForSettling({ x: (x + 0.5) * config.settle.settleMapResolution, y: (y + 0.5) * config.settle.settleMapResolution })) * 255) | 0;\n            }\n        return { w, h, vals: contrastSpreiz(vals) };\n    }\n    settleRateImage() {\n        const { w, h, vals } = this.settleRateMap();\n        return drawImage(w, h, (x, y) => {\n            const r = (Math.pow(vals[y * w + x], 3) * 255) | 0;\n            return [r, r, r, 255];\n        });\n    }\n}\nfunction createArray(len, init) {\n    const arr = new Array(len);\n    for (let i = 0; i < len; i++)\n        arr[i] = init(i);\n    return arr;\n}\nfunction randomNumber(min, max, round = false) {\n    const val = Math.random() * (max - min) + min;\n    return round ? val | 0 : val;\n}\nfunction randomChoice(arr) {\n    return arr[randomNumber(0, arr.length, true)];\n}\nfunction moveInDir(pos, dist, α = 0) {\n    return { x: pos.x + dist * Math.cos(α), y: pos.y + dist * Math.sin(α) };\n}\nfunction getMaxIndex(vals) {\n    let max = vals[0], maxi = 0;\n    for (let i = 1; i < vals.length; i++) {\n        if (vals[i] > max) {\n            max = vals[i];\n            maxi = i;\n        }\n    }\n    return maxi;\n}\nfunction* housePlacementIterate() {\n    let { w, h, vals: settleMap } = city.settleRateMap();\n    settleMap = settleMap.map(x => {\n        const x3 = x * x * x;\n        if (x3 < 0.1)\n            return 0;\n        else\n            return x3;\n    });\n    const max = settleMap.reduce((a, b) => a + b);\n    while (true) {\n        const inx = weightedRandom(settleMap, max);\n        const y = (inx / w) | 0, x = (inx % w) | 0;\n        const pos = { x: config.settle.settleMapResolution * (x + 0.5), y: config.settle.settleMapResolution * (y + 0.5) };\n        yield pos;\n    }\n}\nfunction placeHouseNearRiver(city, river, pos) {\n    const dist = 20;\n    const iter = 50;\n    let centerN = river(pos);\n    let max = -Infinity;\n    let maxP;\n    let maxα;\n    for (let i = 0; i < iter; i++) {\n        const α = 2 * π * i / iter;\n        const pos2 = moveInDir(pos, dist, α);\n        const noise = Math.abs(centerN - river(pos2));\n        if (noise > max) {\n            max = noise;\n            maxP = pos2;\n            maxα = α;\n        }\n    }\n    if (city.oob(maxP))\n        return;\n    if (city.houses.some(house => Pos.distance2(house.pos, maxP) < config.minHouseDist * config.minHouseDist))\n        return;\n    city.add(new House(maxP, maxα));\n}\nfunction randomCity(houseCount = config.initialHouseCount, treeCount = config.treeCount, riverCount = config.riverCount) {\n    const w = config.w, h = config.h;\n    const city = new City();\n    const forest = new Noise.Noise();\n    let i = 0;\n    const forestScale = 3;\n    while (i < treeCount) {\n        const pos = { x: randomNumber(0, w, true), y: randomNumber(0, h, true) };\n        if (forest.perlin2(pos.x / w * forestScale, pos.y / h * forestScale) > randomNumber(0.2, 0.6)) {\n            city.add(new Tree(pos, 3));\n            i++;\n        }\n    }\n    const riverIter = config.riverIter;\n    for (let i = 0; i < riverCount; i++) {\n        let i = 0, tries = 0;\n        var river = new Noise.Noise();\n        var riverScale = 2;\n        while (i < riverIter) {\n            const pos = { x: randomNumber(0, w, true), y: randomNumber(0, h, true) };\n            const noise = river.perlin2(pos.x / w * riverScale, pos.y / h * riverScale);\n            if (noise < 0.01 && noise > -0.01) {\n                city.add(new River(pos, 3));\n                if (city.houses.length < houseCount)\n                    placeHouseNearRiver(city, pos => river.perlin2(pos.x / w * riverScale, pos.y / h * riverScale), pos);\n                i++;\n            }\n            tries++;\n        }\n        if (tries > 100 && tries > i * 200) {\n            river = new Noise.Noise();\n            tries = 0;\n        }\n    }\n    return city;\n}\nfunction delayed(fun, duration) {\n    return new Promise(resolve => setTimeout(() => __awaiter(this, void 0, Promise, function* () { return resolve(yield fun()); }), duration));\n}\nfunction animationFrame() {\n    return new Promise(resolve => requestAnimationFrame(() => resolve()));\n}\nfunction normalizeAngle(α) {\n    if (α > π)\n        α -= 2 * π;\n    if (α < -π)\n        α += 2 * π;\n    return α;\n}\nfunction drawImage(w, h, getColor) {\n    const img = new ImageData(w, h);\n    for (let y = 0; y < h; y++)\n        for (let x = 0; x < w; x++) {\n            const pos = (y * w + x) * 4;\n            [img.data[pos], img.data[pos + 1], img.data[pos + 2], img.data[pos + 3]] = getColor(x, y);\n        }\n    return img;\n}\nfunction walkPath(city, ctx, start, targ) {\n    const x = config.walk;\n    return new Promise((resolve, reject) => {\n        let pos = Pos.clone(start.pos);\n        let α = Pos.angle(pos, targ.pos);\n        let dα = 0;\n        const rotationIntensity = 1 / 4;\n        const posRating = 5;\n        pos = moveInDir(pos, 2 * x.stepDist, α);\n        const rate = (pos) => {\n            if (city.oob(pos))\n                return 0;\n            const res = city.pixelMap.get(pos);\n            if (res === start)\n                return x.rating.start;\n            if (res != null)\n                return config.walk.rating[res.type];\n            return 0;\n        };\n        const targetReached = (pos) => rate(pos) === posRating;\n        const path = [pos];\n        const step = (time = -1, singleStep = false) => {\n            if (window[\"KILL\"])\n                throw \"kill\";\n            pos = moveInDir(pos, x.stepDist, α);\n            path.push(pos);\n            if (!singleStep)\n                ctx.clearRect(0, 0, config.w, config.h);\n            var bucketCount = x.bucketCount;\n            var ratings = createArray(bucketCount, i => 0);\n            var centerBucket = (bucketCount - 1) / 2;\n            ratings[centerBucket]++;\n            var lookps = [];\n            var colors = createArray(bucketCount, i => i % 2 ? \"black\" : \"gray\");\n            var bucketWidth = x.lookFOV / bucketCount;\n            for (let bucket = 0; bucket < bucketCount; bucket++) {\n                let curMaxLookDist = x.maxLookDist;\n                for (let i = 0; i < x.lookIter; i++) {\n                    var lookdα = bucketWidth * (bucket - centerBucket) + randomNumber(0, bucketWidth);\n                    var lookDist = randomNumber(x.minLookDist, curMaxLookDist);\n                    var lookp = moveInDir(pos, lookDist, α + lookdα);\n                    var rating = rate(lookp);\n                    if (rating != 0)\n                        curMaxLookDist = Math.min(curMaxLookDist, lookDist + x.maxLookDist / 10);\n                    ratings[bucket] += rating;\n                    lookps.push([lookp, bucket]);\n                }\n            }\n            if (!singleStep)\n                for (var [lookp, bucket] of lookps)\n                    CityElement.temp(), new CircleElement(lookp, 1, 0, colors[bucket]).render(ctx);\n            if (!singleStep)\n                CityElement.temp(), new CircleElement(targ.pos, 8, 8, \"green\", \"green\").render(ctx);\n            var rot = (getMaxIndex(ratings) - centerBucket) / bucketCount * x.lookFOV * rotationIntensity;\n            dα = rot;\n            let targdα = normalizeAngle(Pos.angle(pos, targ.pos) - α);\n            if (dα === 0) {\n                dα = targdα * 0.3;\n            }\n            dα += targdα * 0.1;\n            α += dα;\n            α = normalizeAngle(α);\n            CityElement.temp(), new CircleElement(pos, 2, 0).render(ctx);\n            if (city.oob(pos) || targetReached(pos)) {\n                console.log(\"target reached\");\n                resolve(path);\n                return true;\n            }\n            else {\n                if (singleStep)\n                    return false;\n                for (let i = 0; i < x.iterPerFrame; i++)\n                    if (step(undefined, true))\n                        return true;\n                requestAnimationFrame(step);\n            }\n        };\n        requestAnimationFrame(step);\n    }).then(e => { ctx.clearRect(0, 0, config.w, config.h); return e; });\n}\nclass CityRenderer extends React.Component {\n    constructor(...args) {\n        super(...args);\n        this.buttonFns = [\n            function redrawCity() {\n                this.drawCity(city);\n            }, function unionizeHouses() {\n                city.unionizeHouses();\n            }, function increasePopulation() {\n                const iter = housePlacementIterate();\n                for (let i = 0; i < config.addHouseCount; i++) {\n                    const pos = iter.next().value;\n                    const nearHouse = city.houses.find(house => Pos.distance2(house.pos, pos) < Math.pow((config.w / 15), 2));\n                    city.add(new House(pos, nearHouse ? nearHouse.rot + randomNumber(0, 3, true) * Math.PI / 2 : randomNumber(0, π)));\n                }\n                this.drawCity(city);\n            }, function debugHitmap() {\n                ctx.putImageData(city.pixelMap.ctx.getImageData(0, 0, 1024, 768), 0, 0);\n            }, function debugSettlemap() {\n                scaleImageData(city.settleRateImage(), config.settle.settleMapResolution, this.getCtx());\n            }];\n    }\n    render() {\n        return (React.createElement(\"div\", null, this.buttonFns.map(fn => React.createElement(\"button\", {\"onClick\": fn.bind(this)}, fn.name)), React.createElement(\"div\", {\"className\": \"overlayCanvases\"}, React.createElement(\"canvas\", {\"ref\": \"canvas1\", \"width\": config.w, \"height\": config.h, \"style\": { border: \"1px solid black\" }}), React.createElement(\"canvas\", {\"ref\": \"canvas2\", \"width\": config.w, \"height\": config.h, \"style\": { border: \"1px solid black\" }}))));\n    }\n    clear() {\n        const ctx = this.getCtx();\n        ctx.fillStyle = \"#fff\";\n        ctx.fillRect(0, 0, config.w, config.h);\n    }\n    drawTerrain(city) {\n        if (!this.terrainImageData) {\n            this.terrainImageData = drawImage(config.w, config.h, (x, y) => {\n                const terr = city.terrain(x, y);\n                return [terr, (terr * 16 / 17) | 0, terr * 10 / 11, 255];\n            });\n        }\n        const ctx = this.getCtx();\n        ctx.putImageData(this.terrainImageData, 0, 0);\n    }\n    drawCity(city) {\n        const ctx = this.getCtx();\n        this.clear();\n        this.drawTerrain(city);\n        for (const ele of [...city.stuff, ...city.roads, ...city.houses]) {\n            ele.render(ctx);\n        }\n    }\n    getCtx() {\n        return this.refs[\"canvas1\"].getContext(\"2d\");\n    }\n    getOverlayCtx() {\n        return this.refs[\"canvas2\"].getContext(\"2d\");\n    }\n}\nvar cityRenderer;\nlet city;\nvar ctx;\n$(document).ready(() => __awaiter(this, void 0, Promise, function* () {\n    cityRenderer = React.render(React.createElement(CityRenderer, null), $(\"#mainContainer\")[0]);\n    city = randomCity();\n    cityRenderer.drawCity(city);\n    city.unionizeHouses();\n    ctx = cityRenderer.getCtx();\n}));\n//# sourceMappingURL=tmp.js.map",null]}